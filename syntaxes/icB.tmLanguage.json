{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "icB",
  "patterns": [
    {
      "include": "#GOTO"
    },
    {
      "include": "#ic10"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#mathOpertors"
    },
    {
      "include": "#if"
    },
    {
      "include": "#variable"
    },
    {
      "include": "#env"
    }
  ],
  "repository": {
    "env":{
      "patterns": [
        {
        "begin": "([Ii][Cc]\\.device\\[)",
        "end": "\\]",
        "beginCaptures": {
          "1":{
              "name":"variable.language.icB"
          }
        }
        }
      ]
    },
    "variableName":{
      "match": "[a-zA-Z]\\w+\\s",
      "name":"variable.parameter.icB"
    },
    "ConstName":{
      "match": "(@[a-zA-Z]\\w+)",
      "name":"constant.language.icB"
    },
    "number":{
      "match": "[-]{0,1}[d]{0,1}\\d+[cC]{0,1}",
      "name":"constant.numeric.icB"
    },
    "hashString": {
      "name": "string.quoted.double.icB",
      "begin": "[\"]",
      "end": "[\"]"
    },
    "variable": {
      "patterns": [
        {
          "match": "(var|alias|const)(.+)(=)(.+)",
          "captures": {
            "1": {
              "name":"keyword.control.icB"
            },
            "2": {
              "patterns": [
                {
                  "include": "#variableName"
                },
                {
                  "include": "#ConstName"
                }
              ]
            },
            "3": {
              "name":"keyword.operator.new.icB"
            },
            "4": {
              "patterns": [
                {
                  "include": "#ConstName"
                },
                {
                  "include": "#hashString"
                },
                {
                  "include": "#number"
                },
                {
                  "include": "#variableName"
                },
                {
                  "include": "#operators"
                },
                {
                  "include": "#mathOpertors"
                }
              ]
            }
          }
        },
        {
          "match": "(.+)(=)(.+)",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#variableName"
                }
              ]
            },
            "2": {
              "name":"keyword.operator.new.icB"
            },
            "3": {
              "patterns": [
                {
                  "include": "#hashString"
                },
                {
                  "include": "#hashString"
                },
                {
                  "include": "#number"
                },
                {
                  "include": "#variableName"
                }
              ]
            }
          }
        }

      ]

    },
    "dotOperator":{
      "patterns": [

      ]
    },
    "GOTO": {
      "patterns": [
        {
          "match": "([a-zA-Z]\\w+)(:)",
          "captures": {
            "0": {
              "name": "variable.language.icB"
            }
          }
        },
        {
          "name": "support.function",
          "match": "\\b([gG][oO][tT][oO]) ([a-zA-Z]\\w+)\\b",
          "captures": {
            "1": {
              "name": "keyword.control.icB"
            },
            "2": {
              "name": "variable.language.icB"
            }
          }
        },
        {
          "name": "support.function",
          "match": "\\b([gG][oO][tT][oO]) (\\d+)\\b",
          "captures": {
            "1": {
              "name": "keyword.control.icB"
            },
            "2": {
              "name": "variable.parameter.icB"
            }
          }
        }
      ]
    },
    "ic10": {
      "patterns": [
        {
          "match": "\\b(ChargeRatio|Class|Damage|Efficiency|Growth|Health|Mature|MaxQuantity|OccupantHash|Occupied|Quantity|Seeding|SortingClass|Activate|AirRelease|Bpm|Charge|ClearMemory|CollectableGoods|Color|Combustion|CombustionInput|CombustionLimiter|CombustionOutput|CombustionOutput2|CompletionRatio|ElevatorLevel|ElevatorSpeed|Error|ExportCount|Filtration|Flush|ForceWrite|Fuel|Harvest|HASH(\"name\")|Horizontal|Idle|ImportCount|InterrogationProgress|LineNumber|Lock|Maximum|MineablesInQueue|MineablesInVicinity|Minimum|MinimumWattsToContact|Mode|NextWeatherEventTime|On|Open|Output|Plant|PositionX|PositionY|PositionZ|Power|PowerActual|PowerGeneration|PowerPotential|PowerRequired|PrefabHash|Pressure|PressureAir|PressureExternal|PressureInput|PressureInternal|PressureOutput|PressureOutput2|PressureSetting|PressureWaste|Ratio|RatioCarbonDioxide|RatioCarbonDioxideInput|RatioCarbonDioxideOutput|RatioCarbonDioxideOutput2|RatioLiquidCarbonDioxide|RatioLiquidNitrogen|RatioLiquidNitrousOxide|RatioLiquidOxygen|RatioLiquidPollutant|RatioLiquidVolatiles|RatioNitrogen|RatioNitrogenInput|RatioNitrogenOutput|RatioNitrogenOutput2|RatioNitrousOxide|RatioNitrousOxideInput|RatioNitrousOxideOutput|RatioNitrousOxideOutput2|RatioOxygen|RatioOxygenInput|RatioOxygenOutput|RatioOxygenOutput2|RatioPollutant|RatioPollutantInput|RatioPollutantOutput|RatioPollutantOutput2|RatioSteam|RatioVolatiles|RatioVolatilesInput|RatioVolatilesOutput|RatioVolatilesOutput2|RatioWater|RatioWaterInput|RatioWaterOutput|RatioWaterOutput2|Reagents|RecipeHash|RequestHash|RequiredPower|ReturnFuelCost|Rpm|Setting|SettingOutput|SignalID|SignalStrength|SizeX|SizeZ|SolarAngle|SolarIrradiance|SoundAlert|Stress|TargetPadIndex|TargetX|TargetY|TargetZ|Temperature|TemperatureExternal|TemperatureInput|TemperatureOutput|TemperatureOutput2|TemperatureSetting|Throttle|Time|TotalMoles|TotalMolesInput|TotalMolesOutput|TotalMolesOutput2|VelocityMagnitude|VelocityRelativeX|VelocityRelativeY|VelocityRelativeZ|Vertical|Volume|VolumeOfLiquid|WattsReachingContact|Contents|deg2rad|nan|ninf|pi|pinf|rad2deg|Recipe|Required|Channel0|Channel1|Channel2|Channel3|Channel4|Channel5|Channel6|Channel7|Average|Sum)\\b",
          "name": "entity.name.type.ic10"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "(={1,2}|!=|>=|<=|>|<|&{2}|\\|{2})",
          "name": "keyword.control.icB"
        }
      ]
    },
    "mathOpertors": {
      "patterns": [
        {
          "match": "(\\+|\\-|\\*|\\/)",
          "name": "keyword.control.icB"
        }
      ]
    },
    "if": {
      "patterns": [
        {
          "begin": "([iI][fF])",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.icB"
            }
          },
          "end": "([tT][hH][eE][nN])",
          "endCaptures": {
            "1": {
              "name": "keyword.control.icB"
            }
          },
          "patterns": [
            {
              "include": "#operators"
            },
            {
              "include": "#mathOpertors"
            },
            {
              "include": "#hashString"
            },
            {
              "include": "#hashString"
            },
            {
              "include": "#number"
            },
            {
              "include": "#variableName"
            }
          ]
        },
        {
          "match": "([eE][lL][sS][eE])",
          "name": "keyword.control.icB"
        },
        {
          "match": "([eE][nN][dD][iI][fF])",
          "name": "keyword.control.icB"
        }
      ]
    }
  },
  "scopeName": "source.icB"
}