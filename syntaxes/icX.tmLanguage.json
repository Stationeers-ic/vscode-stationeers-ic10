{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "icX",
  "foldingStartMarker": "^#\\s{0,1}Section:\\s{0,}\\w+$",
  "foldingStopMarker": "^#\\s{0,1}endSection$",
  "patterns": [
    {
      "include": "#goto"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#entity"
    },
    {
      "include": "#variable"
    },
    {
      "include": "#constant"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#operator"
    }
  ],

  "repository": {
    "GOTO": {
      "patterns": [
        {
          "name": "support.function",
          "match": "^.+(?=:)"
        },
        {
          "name": "support.function",
          "match": "(?!j)(?!\\s).+"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "\\b(Activate|AirRelease|Charge|ClearMemory|Color|CompletionRatio|ElevatorLevel|ElevatorSpeed|Error|ExportCount|Filtration|Harvest|Horizontal|HorizontalRatio|Idle|ImportCount|Lock|Maximum|Mode|On|Open|Output|Plant|PositionX|PositionY|PositionZ|Power|PowerActual|PowerGeneration|PowerPotential|PowerRequired|Pressure|PressureExternal|PressureInteral|RatioNitrousOxide|PressureSetting|Quantity|Ratio|RatioCarbonDioxide|RatioNitrogen|RatioOxygen|RatioPollutant|RatioVolatiles|RatioWater|Reagents|RecipeHash|RequestHash|RequiredPower|Setting|SolarAngle|Temperature|TemperatureExternal|TemperatureSettings|TotalMoles|VelocityMagnitude|VelocityRelativeX|VelocityRelativeY|VelocityRelativeZ|Vertical|VerticalRatio|Volume|Occupied|OccupantHash|Damage|Efficiency|Health|Growth|ChargeRatio|Class|PressureWaste|PressureAir|MaxQuantity|Mature|ForceWrite|Average|Sum|Minimum|Maximum|PrefabHash)\\b",
          "name": "keyword.other.icX"
        },
        {
          "match": "\\b(if|while|else|end)\\b",
          "name": "keyword.control.icX"
        },
        {
          "match": "([\\+\\-\\=\\<\\>\\&\\|\\*\\\\ ])",
          "name": "keyword.operator.icX"
        },
        {
          "match": "(var) ([\\d\\w]+)\\s*(=)",
          "captures": {
            "1": {
              "name": "keyword.control.icX"
            },
            "2": {
              "name": "variable.parameter.icX",
              "patterns": {
                "include": "#variable"
              }
            },
            "3": {
              "name": "keyword.operator.icX"
            }
          }
        },
        {
          "match": "(var) ([\\d\\w]+)",
          "captures": {
            "1": {
              "name": "keyword.control.untitled"
            },
            "2": {
              "name": "variable.parameter.icX",
              "patterns": {
                "include": "#variable"
              }
            }
          }
        },
        {
          "match": "\\b(function) ([\\d\\w]+)",
          "name": "keyword.operator.icX",
          "captures": {
            "1": {
              "name": "keyword.control.untitled"
            },
            "2": {
              "name": "entity.name.function.icX"
            }
          }
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "begin": "#",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.icX"
            }
          },
          "end": "$",
          "name": "comment.line.number-sign.icX"
        },
        {
          "begin": "use",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.icX"
            }
          },
          "end": "$",
          "name": "comment.line.number-sign.icX"
        }
      ]
    },
    "constant": {
      "patterns": [
        {
          "name": "constant.numeric.icX",
          "match": "\\b[\\d\\.]+\\b"
        }
      ]
    },
    "entity": {
      "patterns": [
        {
          "name": "entity.name.function.icX",
          "match": "^\\s{0,}(alias|yield|j|brap|bap|brna|bna|brdns|bdns|brdse|bdse|breq|beq|brge|bge|brgt|bgt|brle|ble|brlt|blt|brne|bne|sap|sna|sdns|sdse|seq|sge|sgt|sle|slt|sne|select|jr|jal|l|s|ls|lr|define|move|add|sub|mul|div|mod|sqrt|round|trunc|ceil|floor|max|min|abs|log|exp|rand|sin|cos|tan|asin|acos|atan|sltz|sgtz|slez|sgez|seqz|snez|sapz|snaz|and|or|xor|nor|bltz|blez|bgez|bgtz|beqz|bnez|bapz|bnaz|bltzal|bltal|bgeal|bgezal|bleal|blezal|bgtal|bgtzal|beqal|beqzal|bneal|bnezal|bapal|bapzal|bnaal|bnazal|bdseal|bdnsal|brltz|brlez|brgez|brgtz|breqz|brnez|brapz|brnaz|sleep|peek|push|pop|hcf|sb|lb|lr)\\b"
        },
        {
          "name": "entity.name.function.icX",
          "match": "([\\d\\w]+)\\(\\)"
        },
        {
          "name": "entity.name.tag.icX",
          "match": "(^\\s{0,}j \\w+$)|(^\\s{0,}\\w+:$)"
        }
      ]
    },
    "variable": {
      "patterns": [
        {
          "name": "variable.parameter.icX",
          "match": "\\b(([rd]{1,}(r(0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|a)))|(r(0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|a))|(d(0|1|2|3|4|5|b)))\\b"
        },
        {
          "name": "variable.language.icX",
          "match": "\\bsp\\b"
        }
      ]
    }
  },
  "scopeName": "source.icX"
}
